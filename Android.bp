package {
    default_applicable_licenses: ["external_tinyalsa_new_license"],
}

// Added automatically by a large-scale-change that took the approach of
// 'apply every license found to every target'. While this makes sure we respect
// every license restriction, it may not be entirely correct.
//
// e.g. GPL in an MIT project might only apply to the contrib/ directory.
//
// Please consider splitting the single license below into multiple licenses,
// taking care not to lose any license_kind information, and overriding the
// default license using the 'licenses: [...]' property on targets as needed.
//
// For unused files, consider creating a 'fileGroup' with "//visibility:private"
// to attach the license to, and including a comment whether the files may be
// used in the current project.
// See: http://go/android-license-faq
license {
    name: "external_tinyalsa_new_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-BSD",
        "SPDX-license-identifier-Unlicense",
    ],
    license_text: [
        "NOTICE",
    ],
}

cc_library {
    name: "libtinyalsav2",
    host_supported: true,
    vendor_available: true,
    srcs: [
        "src/mixer.c",
        "src/mixer_hw.c",
        "src/mixer_plugin.c",
        "src/pcm.c",
        "src/pcm_hw.c",
        "src/pcm_plugin.c",
        "src/snd_card_plugin.c",
    ],
    cflags: ["-Werror", "-Wno-macro-redefined"],
    export_include_dirs: ["include"],
    local_include_dirs: ["include"],

    target: {
        darwin: {
            enabled: false,
        },
    },

    system_shared_libs: ["libc", "libdl"],

    sanitize: {
        integer_overflow: true,
        misc_undefined: ["bounds"],
        diag: {
            integer_overflow: true,
            misc_undefined: ["bounds"],
        },
    },
}

cc_library_headers {
    name: "libtinyalsav2_headers",
    export_include_dirs: ["include"],
    vendor_available: true,
}

cc_binary {
    name: "tinyplay2",
    host_supported: true,
    srcs: ["utils/tinyplay.c"],
    static_libs: ["libtinyalsav2"],
    cflags: ["-Werror"],
    target: {
        darwin: {
            enabled: false,
        },
    },
}

cc_binary {
    name: "tinycap2",
    srcs: ["utils/tinycap.c"],
    static_libs: ["libtinyalsav2"],
    cflags: ["-Werror"],
}

cc_binary {
    name: "tinymix2",
    srcs: ["utils/tinymix.c"],
    static_libs: ["libtinyalsav2"],
    cflags: ["-Werror", "-Wall"],
}

cc_binary {
    name: "tinypcminfo2",
    srcs: ["utils/tinypcminfo.c"],
    static_libs: ["libtinyalsav2"],
    cflags: ["-Werror"],
}

cc_binary {
    name: "tinywavinfo",
    srcs: ["utils/tinywavinfo.c"],
    cflags: ["-Werror", "-lm"],
}
